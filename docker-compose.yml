services:

  github-service:
    build: 
      context: ./github-service
      dockerfile: ./github-service.dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      RABBITMQ: ${RABBITMQ}
      GITHUB_ADDRESS: ${GITHUB_ADDRESS}
      AUTH_ADDRESS: ${AUTH_ADDRESS}
    depends_on:
      - rabbitmq
      - redis
      - db

  profiler-service:
    build: 
      context: ./profiler-service
      dockerfile: ./profiler-service.dockerfile
    restart: always
    environment:
      DB_SERVER: ${DB_SERVER}
      RABBITMQ: ${RABBITMQ}
      REDIS: ${REDIS}
    depends_on:
      - rabbitmq
      - redis
      - db
  
  auth-service:
    build:
      context: ./auth-service
      dockerfile: ./auth-service.dockerfile
    restart: always
    environment:
      DB_SERVER: ${DB_SERVER}
      SECRET: ${SECRET}
      AUTH_ADDRESS: ${AUTH_ADDRESS}
    ports:
      - "8000:8000"
    depends_on:
      - db
  
  backend:
    build:
      context: ./backend
      dockerfile: ./backend.dockerfile
    restart: always
    environment:
      DB_SERVER: ${DB_SERVER}
      BACKEND_ADDRESS: ${BACKEND_ADDRESS}
      AUTH_ADDRESS: ${AUTH_ADDRESS}
      GITHUB_ADDRESS: ${GITHUB_ADDRESS}
      CREDENTIALS_JSON: ${CREDENTIALS_JSON}
      RABBITMQ: ${RABBITMQ}
    ports:
      - "3000:3000"
    volumes:
      - ./service-account-key.json:/secrets/service-account-key.json
    depends_on:
      - db

  rabbitmq:
    image: 'rabbitmq:3.12-management'
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "password"
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # Management interface
  
  redis:
    image: 'redis:7-alpine'
    ports:
      - "6379:6379"
  
  db:
    image: 'mysql:8.0.37'
    environment:
      MYSQL_DATABASE: "gitpulse"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "rootpassword"
    ports:
      - "3333:3306" # DIFFERENT PORT TO AVOID PORT CONFLICT WITH LOCAL INSTANCE
    volumes:
      - db-store:/var/lib/mysql
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]

  logger:
    build:
      context: ./logger
      dockerfile: ./logger.dockerfile
    restart: always
    environment:
      RABBITMQ: ${RABBITMQ}
    volumes:
      - ./logs.md:/logs/logs.md
    depends_on:
      - rabbitmq

volumes:

  db-store: